name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build-publish:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        pip install -r requirements.txt
        pip install .
    - name: Check major version matches migration
      run: |
        MAX_MIGRATION="$(./bin/get-max-migration-version.py)"
        test "$MAX_MIGRATION" -eq "$(<<<"$GITHUB_REF_NAME" tr -d 'v' | cut -d '.' -f 1)" || {
          echo "Release tag $GITHUB_REF_NAME major version != max migration version $MAX_MIGRATION."
          echo "Release major version must equal the max migration version."
          echo "Hint: maybe edit the release to use a tag value with a major version of $MAX_MIGRATION."
          exit 1
        }
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
